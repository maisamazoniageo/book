{
  "cells": [
    {
      "cell_type": "markdown",
      "metadata": {},
      "source": [
        "# Análise do Estado do Tocantins.\n",
        "\n",
        "<div style=\"text-align: justify\"> \n",
        "## Informações Gerais.\n"
      ],
      "id": "e311d9cd"
    },
    {
      "cell_type": "code",
      "metadata": {},
      "source": [
        "#| echo: false\n",
        "#| fig-align: center\n",
        "\n",
        "# Definição de cores\n",
        "cor_gleba = '#e9cf68'\n",
        "cor_SIGEF = '#e0bd1f'\n",
        "cor_PA = '#998115'\n",
        "cor_TI = '#f2d4d3'\n",
        "cor_TQ = '#d7c0dd'\n",
        "cor_UC = '#99eb65'\n",
        "cor_Floresta = '#a7f5e0'\n",
        "cor_massa_agua = '#0751ff'\n",
        "cor_rodovias = '#e10c00'\n",
        "cor_gleba_flo = '#D9E3A9'\n",
        "cor_gleba_uc = '#C1DC66'\n",
        "cor_gleba_ti = '#EFD9A5'\n",
        "cor_gleba_pa = '#C1A83E'\n",
        "cor_gleba_tq = '#CDAFD4'\n",
        "cor_gleba_sigef = '#E4C643'\n",
        "\n",
        "uf_analise = 'Tocantins'\n",
        "import geopandas as gpd\n",
        "import pandas as pd\n",
        "import locale\n",
        "import numpy as np\n",
        "import os\n",
        "import matplotlib.pyplot as plt\n",
        "import matplotlib.patches as patches\n",
        "from IPython.display import display, Markdown\n",
        "pd.options.display.float_format = '{:.4f}'.format\n",
        "pd.set_option('display.precision', 4)\n",
        "locale.setlocale(locale.LC_ALL, 'pt_BR.UTF-8')\n",
        "import warnings\n",
        "warnings.filterwarnings('ignore')\n",
        "from camadas import Camadas\n",
        "camadas = Camadas()\n",
        "uf = camadas.uf()#gpd.read_file('../glebas-federais.gpkg', layer='uf-brasil')\n",
        "uf_select = uf[uf['nm_uf']==uf_analise]\n",
        "gleba_uf_clip = gpd.read_file('../glebas-federais.gpkg', layer=f'gleba-clip-{uf_analise}')\n",
        "gleba_uf_dissolv = gpd.read_file('../glebas-federais.gpkg', layer=f'gleba-dissolv-{uf_analise}')\n",
        "area_estudo = gpd.read_file('../glebas-federais.gpkg', layer='area-estudo')\n",
        "floresta_dissolv_uf = gpd.read_file('../glebas-federais.gpkg', layer=f'floresta-tipo-b-dissolv-{uf_analise}')\n",
        "uc_dissolv = gpd.read_file('../glebas-federais.gpkg', layer=f'uc-dissolv-{uf_analise}')\n",
        "ti_dissolv = gpd.read_file('../glebas-federais.gpkg', layer=f'ti-dissolv-{uf_analise}')\n",
        "pa_dissolv = gpd.read_file('../glebas-federais.gpkg', layer=f'pa-dissolv-{uf_analise}')\n",
        "sigef_uf = gpd.read_file('../glebas-federais.gpkg', layer=f'sigef-{uf_analise}')\n",
        "\n",
        "snci_uf = gpd.read_file('../glebas-federais.gpkg', layer=f'snci-{uf_analise}')\n",
        "\n",
        "area_uf = round(uf_select['area_km2'],4)"
      ],
      "id": "29ce5bc1",
      "execution_count": null,
      "outputs": []
    },
    {
      "cell_type": "code",
      "metadata": {},
      "source": [
        "#| echo: false\n",
        "\n",
        "# cálculos de área\n",
        "gleba_uf_clip['area_ha'] = gleba_uf_clip.to_crs(5880).area/10000\n",
        "gleba_uf_dissolv['area_ha'] = gleba_uf_dissolv.to_crs(5880).area/10000\n",
        "floresta_dissolv_uf['area_ha'] = floresta_dissolv_uf.to_crs(5880).area/10000\n",
        "uc_dissolv['area_ha'] = uc_dissolv.to_crs(5880).area/10000\n",
        "ti_dissolv['area_ha'] = ti_dissolv.to_crs(5880).area/10000\n",
        "pa_dissolv['area_ha'] = pa_dissolv.to_crs(5880).area/10000\n",
        "sigef_uf['area_ha'] = sigef_uf.to_crs(5880).area/10000\n",
        "snci_uf['area_ha'] = snci_uf.to_crs(5880).area/10000\n",
        "sigef_dissolv = sigef_uf['area_ha'].sum()\n",
        "snci_dissolv = snci_uf['area_ha'].sum()"
      ],
      "id": "861545e5",
      "execution_count": null,
      "outputs": []
    },
    {
      "cell_type": "code",
      "metadata": {},
      "source": [
        "#| echo: false\n",
        "#| fig-align: center\n",
        "\n",
        "fig, ax = plt.subplots()\n",
        "area_estudo.plot(ax=ax,facecolor = 'none', edgecolor = 'black', linewidth = 0.7)\n",
        "uf[uf['amaz_legal']==1].plot(ax=ax, facecolor = 'none', edgecolor = 'red', linewidth = 0.7)\n",
        "uf_select.plot(ax=ax, facecolor = 'yellow', edgecolor = 'black', linewidth = 0.7)\n",
        "plt.grid(visible=True)\n",
        "plt.xlabel('Longitude (°)')\n",
        "plt.ylabel('Latitude (°)')\n",
        "plt.show()"
      ],
      "id": "67aef066",
      "execution_count": null,
      "outputs": []
    },
    {
      "cell_type": "markdown",
      "metadata": {},
      "source": [
        "## Glebas Federais na Unidade da Federação.\n",
        "\n",
        "### Área com Glebas Federais.\n"
      ],
      "id": "0021e084"
    },
    {
      "cell_type": "code",
      "metadata": {},
      "source": [
        "#| echo: false\n",
        "#| fig-align: center\n",
        "\n",
        "fig_gleba2, ax_gleba2 = plt.subplots()\n",
        "gleba_uf_clip.plot(ax=ax_gleba2, facecolor = cor_gleba, edgecolor = 'black', alpha = 0.5, linewidth = 0.7)\n",
        "uf_select.plot(ax=ax_gleba2, facecolor = 'none', edgecolor = 'black', linewidth = 0.7)\n",
        "plt.grid(visible=True)\n",
        "plt.xlabel('Longitude (°)')\n",
        "plt.ylabel('Latitude (°)')\n",
        "plt.show()\n",
        "area_total_glebas = round(gleba_uf_dissolv['area_ha'][0]/100,4)\n",
        "percentual_glebas = round((area_total_glebas/area_uf)*100,2)\n",
        "percentual_glebas = locale.currency(percentual_glebas.values[0], grouping=True, symbol=None)\n",
        "area_total_glebas = locale.currency(area_total_glebas, grouping=True, symbol=None)\n",
        "display(Markdown(f'### Área total de Glebas Federais no Estado do {uf_analise}: **{area_total_glebas} km²**'))\n",
        "\n",
        "display(Markdown(f'### Percentual do {uf_analise} ocupado por Glebas Federais: **{percentual_glebas} %**'))"
      ],
      "id": "51ded79a",
      "execution_count": null,
      "outputs": []
    },
    {
      "cell_type": "markdown",
      "metadata": {},
      "source": [
        "## Florestas Públicas.\n",
        "\n",
        "### Florestas Públicas não destinadas.\n",
        "\n",
        "Florestas Públicas do TIPO B (FPB) - São as florestas localizadas em áreas arrecadadas pelo Poder Público, mas que ainda não foram destinadas, de acordo com os dados baixados do Serviço Florestal Brasileiro.\n",
        "\n",
        "fonte: [Serviço Florestal Brasileiro](https://www.gov.br/agricultura/pt-br/assuntos/servico-florestal-brasileiro/cadastro-nacional-de-florestas-publicas){target=\"_blank\"}\n"
      ],
      "id": "809fd4fc"
    },
    {
      "cell_type": "code",
      "metadata": {},
      "source": [
        "#| echo: false\n",
        "#| fig-align: center\n",
        "fig_flor, ax_flor = plt.subplots()\n",
        "# flrestas tipo B dentro da uf analisada\n",
        "floresta_dissolv_uf.plot(ax=ax_flor,facecolor = cor_Floresta, edgecolor = 'none', alpha = 1, linewidth = 0.7)\n",
        "uf_select.plot(ax=ax_flor, facecolor = 'none', edgecolor = 'black', linewidth = 0.7)\n",
        "plt.grid(visible=True)\n",
        "plt.xlabel('Longitude (°)')\n",
        "plt.ylabel('Latitude (°)')\n",
        "plt.show()\n",
        "floresta_B_uf_area = floresta_dissolv_uf['area_ha'].sum()/100\n",
        "percentual_floresta_B = round((floresta_B_uf_area/area_uf)*100,2)\n",
        "floresta_B_uf_area = locale.currency(floresta_B_uf_area, grouping=True, symbol=None)\n",
        "percentual_floresta_B = locale.currency(percentual_floresta_B.values[0], grouping=True, symbol=None)\n",
        "\n",
        "display(Markdown(f'### Área de Florestas Públicas não destinadas no {uf_analise}: **{floresta_B_uf_area} km²**'))\n",
        "\n",
        "display(Markdown(f'### Percentual do {uf_analise} ocupado por Florestas Públicas não destinadas : **{percentual_floresta_B} %**'))"
      ],
      "id": "6b8b9aa4",
      "execution_count": null,
      "outputs": []
    },
    {
      "cell_type": "markdown",
      "metadata": {},
      "source": [
        "## Unidades de Conservação.\n"
      ],
      "id": "6978bf22"
    },
    {
      "cell_type": "code",
      "metadata": {},
      "source": [
        "#| echo: false\n",
        "#| fig-align: center\n",
        "\n",
        "fig_uc, ax_uc = plt.subplots()\n",
        "uc_dissolv.plot(ax=ax_uc, facecolor= cor_UC, edgecolor='none', alpha=1)\n",
        "uf_select.plot(ax=ax_uc, facecolor = 'none', edgecolor = 'black', linewidth = 0.7)\n",
        "plt.grid(visible=True)\n",
        "plt.xlabel('Longitude (°)')\n",
        "plt.ylabel('Latitude (°)')\n",
        "plt.show()\n",
        "uc_uf_area = uc_dissolv['area_ha'].sum()/100\n",
        "percentual_uc = round((uc_uf_area/area_uf)*100,2)\n",
        "uc_uf_area = locale.currency(uc_uf_area, grouping=True, symbol=None)\n",
        "percentual_uc = locale.currency(percentual_uc.values[0], grouping=True, symbol=None)\n",
        "\n",
        "display(Markdown(f'### Área de Unidades de Conservação no {uf_analise}: **{uc_uf_area} km²**'))\n",
        "\n",
        "display(Markdown(f'### O Percentual do {uf_analise} ocupado por Unidades de Conservação : **{percentual_uc} %**'))"
      ],
      "id": "f50a2e32",
      "execution_count": null,
      "outputs": []
    },
    {
      "cell_type": "markdown",
      "metadata": {},
      "source": [
        "## Terras Indígenas\n"
      ],
      "id": "7db10ff4"
    },
    {
      "cell_type": "code",
      "metadata": {},
      "source": [
        "#| echo: false\n",
        "#| fig-align: center\n",
        "\n",
        "fig_ti, ax_ti = plt.subplots()\n",
        "ti_dissolv.plot(ax=ax_ti, facecolor= cor_TI, edgecolor='none', alpha=1)\n",
        "uf_select.plot(ax=ax_ti, facecolor = 'none', edgecolor = 'black', linewidth = 0.7)\n",
        "plt.grid(visible=True)\n",
        "plt.xlabel('Longitude (°)')\n",
        "plt.ylabel('Latitude (°)')\n",
        "plt.show()\n",
        "ti_uf_area = ti_dissolv['area_ha'].sum()/100\n",
        "percentual_ti = round((ti_uf_area/area_uf)*100,2)\n",
        "ti_uf_area = locale.currency(ti_uf_area, grouping=True, symbol=None)\n",
        "percentual_ti = locale.currency(percentual_ti.values[0], grouping=True, symbol=None)\n",
        "\n",
        "display(Markdown(f'### Área de Terras Indígenas no {uf_analise}: **{ti_uf_area} km²**'))\n",
        "\n",
        "display(Markdown(f'### O Percentual do {uf_analise} ocupado por Terras Indígenas: **{percentual_ti} %**'))"
      ],
      "id": "c257a5a7",
      "execution_count": null,
      "outputs": []
    },
    {
      "cell_type": "markdown",
      "metadata": {},
      "source": [
        "## Projetos de Assentamento.\n"
      ],
      "id": "4b3d3bcd"
    },
    {
      "cell_type": "code",
      "metadata": {},
      "source": [
        "#| echo: false\n",
        "#| fig-align: center\n",
        "\n",
        "fig_pa, ax_pa = plt.subplots()\n",
        "pa_dissolv.plot(ax=ax_pa, facecolor= cor_PA, edgecolor='none', alpha=1)\n",
        "uf_select.plot(ax=ax_pa, facecolor = 'none', edgecolor = 'black', linewidth = 0.7)\n",
        "plt.grid(visible=True)\n",
        "plt.xlabel('Longitude (°)')\n",
        "plt.ylabel('Latitude (°)')\n",
        "plt.show()\n",
        "pa_uf_area = pa_dissolv['area_ha'].sum()/100\n",
        "percentual_pa = round((pa_uf_area/area_uf)*100,2)\n",
        "pa_uf_area = locale.currency(pa_uf_area, grouping=True, symbol=None)\n",
        "percentual_pa = locale.currency(percentual_pa.values[0], grouping=True, symbol=None)\n",
        "\n",
        "display(Markdown(f'### Área de Projetos de Assentamento no {uf_analise}: **{pa_uf_area} km²**'))\n",
        "\n",
        "display(Markdown(f'### O Percentual do {uf_analise} ocupado por Projetos de Assentamento: **{percentual_pa} %**'))"
      ],
      "id": "63101bdf",
      "execution_count": null,
      "outputs": []
    },
    {
      "cell_type": "markdown",
      "metadata": {},
      "source": [
        "## Territórios Quilombolas.\n"
      ],
      "id": "ec95cd62"
    },
    {
      "cell_type": "code",
      "metadata": {},
      "source": [
        "#| echo: false\n",
        "#| fig-align: center\n",
        "try:\n",
        "    tq_uf = gpd.read_file('../glebas-federais.gpkg', layer=f'tq-{uf_analise}')\n",
        "    tq_dissolv = gpd.read_file('../glebas-federais.gpkg', layer=f'tq-dissolv-{uf_analise}')\n",
        "except:\n",
        "    tq_uf = []\n",
        "if len(tq_uf)>0:\n",
        "    tq_uf['area_ha'] = tq_uf.to_crs(5880).area/10000\n",
        "    tq_dissolv['area_ha'] = tq_dissolv.to_crs(5880).area/10000\n",
        "    fig_tq, ax_tq = plt.subplots()\n",
        "    tq_uf.plot(ax=ax_tq, facecolor=cor_TQ, edgecolor='none', alpha=1)\n",
        "    uf_select.plot(ax=ax_tq, facecolor = 'none', edgecolor = 'black', linewidth = 0.7)\n",
        "    plt.grid(visible=True)\n",
        "    plt.xlabel('Longitude (°)')\n",
        "    plt.ylabel('Latitude (°)')\n",
        "    plt.show()\n",
        "    tq_uf_area = tq_dissolv['area_ha'].sum()/100\n",
        "    percentual_tq = round((tq_uf_area/area_uf)*100,2)\n",
        "    tq_uf_area = locale.currency(tq_uf_area, grouping=True, symbol=None)\n",
        "    percentual_tq = locale.currency(percentual_tq.values[0], grouping=True, symbol=None)\n",
        "\n",
        "    display(Markdown(f'### Área de Territórios Quilombolas no {uf_analise}: **{tq_uf_area} km²**'))\n",
        "\n",
        "    display(Markdown(f'### O Percentual do {uf_analise} ocupado por Territórios Quilombolas: **{percentual_tq} %**'))\n",
        "else:\n",
        "     display(Markdown(f'### Não há Área de Territórios Quilombolas no {uf_analise}'))"
      ],
      "id": "c5b62480",
      "execution_count": null,
      "outputs": []
    },
    {
      "cell_type": "markdown",
      "metadata": {},
      "source": [
        "## Certificações Particulares (SIGEF).\n"
      ],
      "id": "8fcd43da"
    },
    {
      "cell_type": "code",
      "metadata": {},
      "source": [
        "#| echo: false\n",
        "#| fig-align: center\n",
        "if sigef_uf.shape[0]>0:\n",
        "    fig_sigef, ax_sigef = plt.subplots()\n",
        "    sigef_uf.plot(ax=ax_sigef, facecolor=cor_SIGEF, edgecolor='none', alpha=1)\n",
        "    uf_select.plot(ax=ax_sigef, facecolor = 'none', edgecolor = 'black', linewidth = 0.7)\n",
        "    plt.grid(visible=True)\n",
        "    plt.xlabel('Longitude (°)')\n",
        "    plt.ylabel('Latitude (°)')\n",
        "    plt.show()\n",
        "    # transforma a área de hectares para quilômetros quadrados\n",
        "    sigef_uf_area = sigef_dissolv/100\n",
        "    percentual_sigef = round((sigef_uf_area/area_uf)*100,2)\n",
        "    sigef_uf_area = locale.currency(sigef_uf_area, grouping=True, symbol=None)\n",
        "    percentual_sigef = locale.currency(percentual_sigef.values[0], grouping=True, symbol=None)\n",
        "    display(Markdown(f'### Área de Imóveis Certificados no {uf_analise}: **{sigef_uf_area} km²**'))\n",
        "    display(Markdown(f'### O Percentual do {uf_analise} ocupado por Imóveis Certificados: **{percentual_sigef} %**'))\n",
        "\n",
        "    display(Markdown(f'### O Estado do {uf_analise} possui **{sigef_uf.shape[0]}** polígonos Certificados'))\n",
        "else:\n",
        "    display(Markdown(f'### Não foi identificado Imóveis Certificados demarcados no {uf_analise}' ))"
      ],
      "id": "fb5583b6",
      "execution_count": null,
      "outputs": []
    },
    {
      "cell_type": "markdown",
      "metadata": {},
      "source": [
        "## Certificações Particulares (SNCI).\n"
      ],
      "id": "9a7c343c"
    },
    {
      "cell_type": "code",
      "metadata": {},
      "source": [
        "#| echo: false\n",
        "#| fig-align: center\n",
        "if snci_uf.shape[0]>0:\n",
        "    fig_snci, ax_snci = plt.subplots()\n",
        "    snci_uf.plot(ax=ax_snci, facecolor=cor_SIGEF, edgecolor='none', alpha=1)\n",
        "    uf_select.plot(ax=ax_snci, facecolor = 'none', edgecolor = 'black', linewidth = 0.7)\n",
        "    plt.grid(visible=True)\n",
        "    plt.xlabel('Longitude (°)')\n",
        "    plt.ylabel('Latitude (°)')\n",
        "    plt.show()\n",
        "    snci_uf_area = snci_dissolv/100\n",
        "    percentual_snci = round((snci_uf_area/area_uf)*100,2)\n",
        "    snci_uf_area = locale.currency(snci_uf_area, grouping=True, symbol=None)\n",
        "    percentual_snci = locale.currency(percentual_snci.values[0], grouping=True, symbol=None)\n",
        "    display(Markdown(f'### Área de Imóveis Certificados no {uf_analise}: **{snci_uf_area} km²**'))\n",
        "    display(Markdown(f'### O Percentual do {uf_analise} ocupado por Imóveis Certificados: **{percentual_snci} %**'))\n",
        "\n",
        "    display(Markdown(f'### O Estado do {uf_analise} possui **{snci_uf.shape[0]}** polígonos Certificados'))\n",
        "else:\n",
        "    display(Markdown(f'### Não foi identificado Imóveis Certificados demarcados no {uf_analise}' ))"
      ],
      "id": "fbdc304e",
      "execution_count": null,
      "outputs": []
    },
    {
      "cell_type": "markdown",
      "metadata": {},
      "source": [
        "## Análise de Sobreposições.\n",
        "\n",
        "As análises de sobreposições visam mostrar a sobreposição entre as classes de áreas públicas existentes para que possamos determinar se a relação é concorrente ou não. A análise será elaborada tendo as Glebas Federais como ponto pincipal sendo comparadas com Florestas Públicas não destinadas, Terras Indígenas, Unidades de Conservação e Projetos de Assentamento.\n",
        "\n",
        "### Glebas Federais sobrepostas a Florestas Públicas não destinadas.\n",
        "\n",
        "#### Mapa Geral.\n"
      ],
      "id": "fe30fc2b"
    },
    {
      "cell_type": "code",
      "metadata": {},
      "source": [
        "#| echo: false\n",
        "#| fig-align: center\n",
        "\n",
        "fig_gle_flo, ax_gle_flo = plt.subplots()\n",
        "uf_select.plot(ax=ax_gle_flo, facecolor = 'none', edgecolor = 'black', linewidth = 0.7)\n",
        "floresta_dissolv_uf.plot(ax=ax_gle_flo, facecolor = cor_Floresta, edgecolor = 'none', alpha = 1, linewidth = 0.7)\n",
        "gleba_uf_clip.plot(ax=ax_gle_flo, facecolor = cor_gleba, edgecolor = 'black', alpha = 0.5, linewidth = 0.7)\n",
        "# LEGENDAS\n",
        "patch_list = []\n",
        "patch_list.append(patches.Patch(facecolor=cor_Floresta, alpha=1, edgecolor='none', label='Florestas Públicas', linewidth=1))\n",
        "patch_list.append(patches.Patch(facecolor=cor_gleba, edgecolor='blue', label='Gleba Federal', linewidth=1, alpha=0.5))\n",
        "patch_list.append(patches.Patch(facecolor=cor_gleba_flo, label='Florestas nas Glebas', linewidth=1))\n",
        "# Creates a legend with the list of patches above.\n",
        "ax_gle_flo.legend(handles=patch_list, fontsize=10, loc='lower left',\n",
        "        bbox_to_anchor = (1,0.75),title='Legenda', title_fontsize=12)\n",
        "\n",
        "plt.grid(visible=True)\n",
        "plt.xlabel('Longitude (°)')\n",
        "plt.ylabel('Latitude (°)')\n",
        "plt.show()"
      ],
      "id": "8e003745",
      "execution_count": null,
      "outputs": []
    },
    {
      "cell_type": "markdown",
      "metadata": {},
      "source": [
        "#### Glebas Federais com Floresta Pública não destinada.\n"
      ],
      "id": "4f09968d"
    },
    {
      "cell_type": "code",
      "metadata": {},
      "source": [
        "#| echo: false\n",
        "#| fig-align: center\n",
        "fig_gle_flo_clip, ax_gle_flo_clip = plt.subplots()\n",
        "uf_select.plot(ax=ax_gle_flo_clip, facecolor = 'none', edgecolor = 'black', linewidth = 0.7)\n",
        "gle_flo_clip = gleba_uf_clip.overlay(floresta_dissolv_uf, how='intersection', keep_geom_type=False)\n",
        "gleba_uf_clip.plot(ax=ax_gle_flo_clip, facecolor = 'none', edgecolor = 'black', alpha = 0.5, linewidth = 0.7)\n",
        "gle_flo_clip.plot(ax=ax_gle_flo_clip, facecolor = cor_gleba_flo, edgecolor = 'none', alpha = 1, linewidth = 0.7)\n",
        "# LEGENDAS\n",
        "patch_list = []\n",
        "patch_list.append(patches.Patch(facecolor = 'none', edgecolor = 'black', linewidth = 0.7, label=f'{uf_analise}'))\n",
        "patch_list.append(patches.Patch(facecolor='none', edgecolor='blue', linewidth = 0.7, label='Gleba Federal'))\n",
        "patch_list.append(patches.Patch(facecolor = cor_gleba_flo, edgecolor = 'none', alpha = 1, linewidth = 0.7, label='Florestas nas Glebas'))\n",
        "# Creates a legend with the list of patches above.\n",
        "ax_gle_flo_clip.legend(handles=patch_list, fontsize=8, loc='lower left',\n",
        "        bbox_to_anchor = (1,0.75),title='Legenda', title_fontsize=10)\n",
        "\n",
        "\n",
        "plt.grid(visible=True)\n",
        "plt.xlabel('Longitude (°)')\n",
        "plt.ylabel('Latitude (°)')\n",
        "plt.show()\n",
        "\n",
        "# Recalculando a área das glebas no interior das florestas policônica em km2\n",
        "gle_flo_clip['area_km2'] = (gle_flo_clip.to_crs(5880).area)/1000000\n",
        "\n",
        "gle_flo_clip_area = gle_flo_clip['area_km2'].sum()\n",
        "#percentual_floresta_B = round((floresta_B_uf_area/area_uf)*100,2)\n",
        "gle_flo_clip_area = locale.currency(gle_flo_clip_area, grouping=True, symbol=None)\n",
        "\n",
        "\n",
        "display(Markdown(f'### A área de Florestas Públicas *_não destinadas_* dentro das Glebas Federais no Estado do {uf_analise} é de: **{gle_flo_clip_area} km²**'))\n",
        "\n",
        "display(Markdown(f'''Dos {floresta_B_uf_area} km² de Florestas Públicas classificadas na base do Serviço Florestal Brasileiro, {gle_flo_clip_area} km² estão sobrepostas aos polígons de Glebas Públicas Federais registrados na base de dados do INCRA.'''))"
      ],
      "id": "6e2b02c4",
      "execution_count": null,
      "outputs": []
    },
    {
      "cell_type": "markdown",
      "metadata": {},
      "source": [
        "### Glebas Federais sobrepostas a Unidades de Conservação.\n",
        "\n",
        "#### Mapa Geral.\n"
      ],
      "id": "1d7ff03a"
    },
    {
      "cell_type": "code",
      "metadata": {},
      "source": [
        "#| echo: false\n",
        "#| fig-align: center\n",
        "\n",
        "fig_gle_uc, ax_gle_uc = plt.subplots()\n",
        "uf_select.plot(ax=ax_gle_uc, facecolor = 'none', edgecolor = 'black', linewidth = 0.7)\n",
        "uc_dissolv.plot(ax=ax_gle_uc, facecolor = cor_UC, edgecolor = 'none', alpha = 1, linewidth = 0.7)\n",
        "gleba_uf_clip.plot(ax=ax_gle_uc, facecolor = cor_gleba, edgecolor = 'black', alpha = 0.5, linewidth = 0.7)\n",
        "# LEGENDAS\n",
        "patch_list = []\n",
        "patch_list.append(patches.Patch(facecolor=cor_UC, alpha=1, edgecolor='none', label='Unidades de Conservação', linewidth=1))\n",
        "patch_list.append(patches.Patch(facecolor=cor_gleba, edgecolor='blue', label='Gleba Federal', linewidth=1, alpha=0.5))\n",
        "patch_list.append(patches.Patch(facecolor=cor_gleba_uc, label='Unid. de Consercação nas Glebas', linewidth=1))\n",
        "# Creates a legend with the list of patches above.\n",
        "ax_gle_uc.legend(handles=patch_list, fontsize=10, loc='lower left',\n",
        "        bbox_to_anchor = (1,0.75),title='Legenda', title_fontsize=12)\n",
        "\n",
        "plt.grid(visible=True)\n",
        "plt.xlabel('Longitude (°)')\n",
        "plt.ylabel('Latitude (°)')\n",
        "plt.show()"
      ],
      "id": "737941b3",
      "execution_count": null,
      "outputs": []
    },
    {
      "cell_type": "markdown",
      "metadata": {},
      "source": [
        "#### Glebas Federais com Unidades de Conservação.\n"
      ],
      "id": "2e1d4039"
    },
    {
      "cell_type": "code",
      "metadata": {},
      "source": [
        "#| echo: false\n",
        "#| fig-align: center\n",
        "fig_gle_uc_clip, ax_gle_uc_clip = plt.subplots()\n",
        "uf_select.plot(ax=ax_gle_uc_clip, facecolor = 'none', edgecolor = 'black', linewidth = 0.7)\n",
        "gle_uc_clip = gleba_uf_clip.overlay(uc_dissolv, how='intersection', keep_geom_type=False)\n",
        "gleba_uf_clip.plot(ax=ax_gle_uc_clip, facecolor='none', edgecolor='blue', alpha = 0.5, linewidth = 0.7)\n",
        "gle_uc_clip.plot(ax=ax_gle_uc_clip, facecolor = cor_gleba_uc, edgecolor = 'none', alpha = 1, linewidth = 0.7)\n",
        "# LEGENDAS\n",
        "patch_list = []\n",
        "patch_list.append(patches.Patch(facecolor = 'none', edgecolor = 'black', linewidth = 0.7, label=f'{uf_analise}'))\n",
        "patch_list.append(patches.Patch(facecolor='none', edgecolor='blue', linewidth = 0.7, label='Gleba Federal'))\n",
        "patch_list.append(patches.Patch(facecolor = cor_gleba_uc, edgecolor = 'none', alpha = 1, linewidth = 0.7, label='Unid. de Conservação nas Glebas'))\n",
        "# Creates a legend with the list of patches above.\n",
        "ax_gle_uc_clip.legend(handles=patch_list, fontsize=8, loc='lower left',\n",
        "        bbox_to_anchor = (1,0.75),title='Legenda', title_fontsize=10)\n",
        "\n",
        "\n",
        "plt.grid(visible=True)\n",
        "plt.xlabel('Longitude (°)')\n",
        "plt.ylabel('Latitude (°)')\n",
        "plt.show()\n",
        "\n",
        "# Recalculando a área das glebas no interior das florestas policônica em km2\n",
        "gle_uc_clip['area_km2'] = (gle_uc_clip.to_crs(5880).area)/1000000\n",
        "\n",
        "gle_uc_clip_area = gle_uc_clip['area_km2'].sum()\n",
        "#percentual_floresta_B = round((floresta_B_uf_area/area_uf)*100,2)\n",
        "gle_uc_clip_area = locale.currency(gle_uc_clip_area, grouping=True, symbol=None)\n",
        "\n",
        "\n",
        "display(Markdown(f'### A área de Unidades de Conservação dentro das Glebas Federais no Estado do {uf_analise} é de: **{gle_uc_clip_area} km²**'))\n",
        "\n",
        "display(Markdown(f'''Dos {uc_uf_area} km² de Unidades de Conservação, {gle_uc_clip_area} km² estão sobrepostas aos polígons de Glebas Públicas Federais registrados na base de dados do INCRA.'''))"
      ],
      "id": "82d5ed2d",
      "execution_count": null,
      "outputs": []
    },
    {
      "cell_type": "markdown",
      "metadata": {},
      "source": [
        "### Glebas Federais sobrepostas a Terras Indígenas.\n",
        "\n",
        "#### Mapa Geral.\n"
      ],
      "id": "822c22b3"
    },
    {
      "cell_type": "code",
      "metadata": {},
      "source": [
        "#| echo: false\n",
        "#| fig-align: center\n",
        "\n",
        "fig_gle_ti, ax_gle_ti = plt.subplots()\n",
        "uf_select.plot(ax=ax_gle_ti, facecolor = 'none', edgecolor = 'black', linewidth = 0.7)\n",
        "ti_dissolv.plot(ax=ax_gle_ti, facecolor = cor_TI, edgecolor = 'none', alpha = 1, linewidth = 0.7)\n",
        "gleba_uf_clip.plot(ax=ax_gle_ti, facecolor = cor_gleba, edgecolor = 'black', alpha = 0.5, linewidth = 0.7)\n",
        "# LEGENDAS\n",
        "patch_list = []\n",
        "patch_list.append(patches.Patch(facecolor=cor_TI, alpha=0.6, edgecolor='none', label='Terras Indígenas', linewidth=1))\n",
        "patch_list.append(patches.Patch(facecolor=cor_gleba, edgecolor='blue', label='Gleba Federal', linewidth=1, alpha=0.5))\n",
        "patch_list.append(patches.Patch(facecolor=cor_gleba_ti, label='Terras Indígenas nas Glebas', linewidth=1))\n",
        "# Creates a legend with the list of patches above.\n",
        "ax_gle_ti.legend(handles=patch_list, fontsize=10, loc='lower left',\n",
        "        bbox_to_anchor = (1,0.75),title='Legenda', title_fontsize=12)\n",
        "\n",
        "plt.grid(visible=True)\n",
        "plt.xlabel('Longitude (°)')\n",
        "plt.ylabel('Latitude (°)')\n",
        "plt.show()"
      ],
      "id": "e922aaf6",
      "execution_count": null,
      "outputs": []
    },
    {
      "cell_type": "markdown",
      "metadata": {},
      "source": [
        "#### Glebas Federais com Terras Indígenas.\n"
      ],
      "id": "23cd328a"
    },
    {
      "cell_type": "code",
      "metadata": {},
      "source": [
        "#| echo: false\n",
        "#| fig-align: center\n",
        "fig_gle_ti_clip, ax_gle_ti_clip = plt.subplots()\n",
        "uf_select.plot(ax=ax_gle_ti_clip, facecolor = 'none', edgecolor = 'black', linewidth = 0.7)\n",
        "gle_ti_clip = gleba_uf_clip.overlay(ti_dissolv, how='intersection', keep_geom_type=False)\n",
        "gleba_uf_clip.plot(ax=ax_gle_ti_clip, facecolor = 'none', edgecolor = 'black', alpha = 0.5, linewidth = 0.7)\n",
        "gle_ti_clip.plot(ax=ax_gle_ti_clip, facecolor = cor_gleba_ti, edgecolor = 'none', alpha = 1, linewidth = 0.7)\n",
        "# LEGENDAS\n",
        "patch_list = []\n",
        "patch_list.append(patches.Patch(facecolor = 'none', edgecolor = 'black', linewidth = 0.7, label=f'{uf_analise}'))\n",
        "patch_list.append(patches.Patch(facecolor='none', edgecolor='blue', linewidth = 0.7, label='Gleba Federal'))\n",
        "patch_list.append(patches.Patch(facecolor = cor_gleba_ti, edgecolor = 'none', alpha = 1, linewidth = 0.7, label='Terras Indígenas nas Glebas'))\n",
        "# Creates a legend with the list of patches above.\n",
        "ax_gle_ti_clip.legend(handles=patch_list, fontsize=8, loc='lower left',\n",
        "        bbox_to_anchor = (1,0.75),title='Legenda', title_fontsize=10)\n",
        "\n",
        "\n",
        "plt.grid(visible=True)\n",
        "plt.xlabel('Longitude (°)')\n",
        "plt.ylabel('Latitude (°)')\n",
        "plt.show()\n",
        "\n",
        "# Recalculando a área das glebas no interior das florestas policônica em km2\n",
        "gle_ti_clip['area_km2'] = (gle_ti_clip.to_crs(5880).area)/1000000\n",
        "\n",
        "gle_ti_clip_area = gle_ti_clip['area_km2'].sum()\n",
        "#percentual_floresta_B = round((floresta_B_uf_area/area_uf)*100,2)\n",
        "gle_ti_clip_area = locale.currency(gle_ti_clip_area, grouping=True, symbol=None)\n",
        "\n",
        "\n",
        "display(Markdown(f'### A área de Terras Indígenas dentro das Glebas Federais no Estado do {uf_analise} é de: **{gle_ti_clip_area} km²**'))\n",
        "\n",
        "display(Markdown(f'''Dos {ti_uf_area} km² de Terras Indígenas, {gle_ti_clip_area} km² estão sobrepostas aos polígons de Glebas Públicas Federais registrados na base de dados do INCRA.'''))"
      ],
      "id": "cbe9da5f",
      "execution_count": null,
      "outputs": []
    },
    {
      "cell_type": "markdown",
      "metadata": {},
      "source": [
        "### Glebas Federais sobrepostas a Projetos de Assentamento.\n",
        "\n",
        "#### Mapa Geral.\n"
      ],
      "id": "9a7acbf4"
    },
    {
      "cell_type": "code",
      "metadata": {},
      "source": [
        "#| echo: false\n",
        "#| fig-align: center\n",
        "\n",
        "fig_gle_pa, ax_gle_pa = plt.subplots()\n",
        "uf_select.plot(ax=ax_gle_pa, facecolor = 'none', edgecolor = 'black', linewidth = 0.7)\n",
        "pa_dissolv.plot(ax=ax_gle_pa, facecolor = cor_PA, edgecolor = 'none', alpha = 1, linewidth = 0.7)\n",
        "gleba_uf_clip.plot(ax=ax_gle_pa, facecolor = cor_gleba, edgecolor = 'black', alpha = 0.5, linewidth = 0.7)\n",
        "# LEGENDAS\n",
        "patch_list = []\n",
        "patch_list.append(patches.Patch(facecolor=cor_PA, alpha=0.6, edgecolor='none', label='Assentamentos', linewidth=1))\n",
        "patch_list.append(patches.Patch(facecolor=cor_gleba, edgecolor='blue', label='Gleba Federal', linewidth=1, alpha=0.5))\n",
        "patch_list.append(patches.Patch(facecolor=cor_gleba_pa, label='Assentamentos nas Glebas', linewidth=1))\n",
        "# Creates a legend with the list of patches above.\n",
        "ax_gle_pa.legend(handles=patch_list, fontsize=10, loc='lower left',\n",
        "        bbox_to_anchor = (1,0.75),title='Legenda', title_fontsize=12)\n",
        "\n",
        "plt.grid(visible=True)\n",
        "plt.xlabel('Longitude (°)')\n",
        "plt.ylabel('Latitude (°)')\n",
        "plt.show()"
      ],
      "id": "7b827c75",
      "execution_count": null,
      "outputs": []
    },
    {
      "cell_type": "markdown",
      "metadata": {},
      "source": [
        "#### Glebas Federais com Projetos de Assentamentos.\n"
      ],
      "id": "b5503731"
    },
    {
      "cell_type": "code",
      "metadata": {},
      "source": [
        "#| echo: false\n",
        "#| fig-align: center\n",
        "fig_gle_pa_clip, ax_gle_pa_clip = plt.subplots()\n",
        "uf_select.plot(ax=ax_gle_pa_clip, facecolor = 'none', edgecolor = 'black', linewidth = 0.7)\n",
        "gle_pa_clip = gleba_uf_clip.overlay(pa_dissolv, how='intersection', keep_geom_type=False)\n",
        "gleba_uf_clip.plot(ax=ax_gle_pa_clip, facecolor = 'none', edgecolor = 'black', alpha = 0.5, linewidth = 0.7)\n",
        "gle_pa_clip.plot(ax=ax_gle_pa_clip, facecolor = cor_gleba_pa, edgecolor = 'none', alpha = 1, linewidth = 0.7)\n",
        "# LEGENDAS\n",
        "patch_list = []\n",
        "patch_list.append(patches.Patch(facecolor = 'none', edgecolor = 'black', linewidth = 0.7, label=f'{uf_analise}'))\n",
        "patch_list.append(patches.Patch(facecolor='none', edgecolor='blue', linewidth = 0.7, label='Gleba Federal'))\n",
        "patch_list.append(patches.Patch(facecolor = cor_gleba_pa, edgecolor = 'none', alpha = 1, linewidth = 0.7, label='Assentamentos nas Glebas'))\n",
        "# Creates a legend with the list of patches above.\n",
        "ax_gle_pa_clip.legend(handles=patch_list, fontsize=8, loc='lower left',\n",
        "        bbox_to_anchor = (1,0.75),title='Legenda', title_fontsize=10)\n",
        "\n",
        "\n",
        "plt.grid(visible=True)\n",
        "plt.xlabel('Longitude (°)')\n",
        "plt.ylabel('Latitude (°)')\n",
        "plt.show()\n",
        "\n",
        "# Recalculando a área das glebas no interior dos pa em km2\n",
        "gle_pa_clip['area_km2'] = (gle_pa_clip.to_crs(5880).area)/1000000\n",
        "\n",
        "gle_pa_clip_area = gle_pa_clip['area_km2'].sum()\n",
        "#percentual_floresta_B = round((floresta_B_uf_area/area_uf)*100,2)\n",
        "gle_pa_clip_area = locale.currency(gle_pa_clip_area, grouping=True, symbol=None)\n",
        "\n",
        "\n",
        "display(Markdown(f'### A área de Assentamentos dentro das Glebas Federais no Estado do {uf_analise} é de: **{gle_pa_clip_area} km²**'))\n",
        "\n",
        "display(Markdown(f'''Dos {pa_uf_area} km² de Assentamentos, {gle_pa_clip_area} km² estão sobrepostas aos polígons de Glebas Públicas Federais registrados na base de dados do INCRA.'''))"
      ],
      "id": "f8611352",
      "execution_count": null,
      "outputs": []
    },
    {
      "cell_type": "markdown",
      "metadata": {},
      "source": [
        "### Glebas Federais sobrepostas a Territórios Quilombola.\n",
        "\n",
        "#### Mapa Geral.\n"
      ],
      "id": "56c5e61e"
    },
    {
      "cell_type": "code",
      "metadata": {},
      "source": [
        "#| echo: false\n",
        "#| fig-align: center\n",
        "try:\n",
        "        fig_gle_tq, ax_gle_tq = plt.subplots()\n",
        "        uf_select.plot(ax=ax_gle_tq, facecolor = 'none', edgecolor = 'black', linewidth = 0.7)\n",
        "        tq_uf.plot(ax=ax_gle_tq, facecolor = cor_TQ, edgecolor = 'none', alpha = 1, linewidth = 0.7)\n",
        "        gleba_uf_clip.plot(ax=ax_gle_tq, facecolor = cor_gleba, edgecolor = 'black', alpha = 0.5, linewidth = 0.7)\n",
        "        # LEGENDAS\n",
        "        patch_list = []\n",
        "        patch_list.append(patches.Patch(facecolor=cor_TQ, alpha=0.6, edgecolor='none', label='Assentamentos', linewidth=1))\n",
        "        patch_list.append(patches.Patch(facecolor=cor_gleba, edgecolor='blue', label='Gleba Federal', linewidth=1, alpha=0.5))\n",
        "        patch_list.append(patches.Patch(facecolor=cor_gleba_tq, label='Quilombos nas Glebas', linewidth=1))\n",
        "        # Creates a legend with the list of patches above.\n",
        "        ax_gle_tq.legend(handles=patch_list, fontsize=10, loc='lower left',\n",
        "                bbox_to_anchor = (1,0.75),title='Legenda', title_fontsize=12)\n",
        "\n",
        "        plt.grid(visible=True)\n",
        "        plt.xlabel('Longitude (°)')\n",
        "        plt.ylabel('Latitude (°)')\n",
        "        plt.show()\n",
        "except:\n",
        "        display(Markdown(f'### Não há Territórios Quilobola demarcados no Estado do {uf_analise} dentro de Glebas Federais.'))"
      ],
      "id": "dd43371b",
      "execution_count": null,
      "outputs": []
    },
    {
      "cell_type": "markdown",
      "metadata": {},
      "source": [
        "#### Glebas Federais com Territórios Quilombola.\n"
      ],
      "id": "5fd86350"
    },
    {
      "cell_type": "code",
      "metadata": {},
      "source": [
        "#| echo: false\n",
        "#| fig-align: center\n",
        "try:\n",
        "        fig_gle_tq_clip, ax_gle_tq_clip = plt.subplots()\n",
        "        uf_select.plot(ax=ax_gle_tq_clip, facecolor = 'none', edgecolor = 'black', linewidth = 0.7)\n",
        "        gle_tq_clip = gleba_uf_clip.overlay(tq_uf, how='intersection', keep_geom_type=False)\n",
        "        gleba_uf_clip.plot(ax=ax_gle_tq_clip, facecolor = 'none', edgecolor = 'black', alpha = 0.5, linewidth = 0.7)\n",
        "        gle_tq_clip.plot(ax=ax_gle_tq_clip, facecolor = cor_gleba_tq, edgecolor = 'none', alpha = 1, linewidth = 0.7)\n",
        "        # LEGENDAS\n",
        "        patch_list = []\n",
        "        patch_list.append(patches.Patch(facecolor = 'none', edgecolor = 'black', linewidth = 0.7, label=f'{uf_analise}'))\n",
        "        patch_list.append(patches.Patch(facecolor='none', edgecolor='blue', linewidth = 0.7, label='Gleba Federal'))\n",
        "        patch_list.append(patches.Patch(facecolor = cor_gleba_pa, edgecolor = 'none', alpha = 1, linewidth = 0.7, label='Quilombos nas Glebas'))\n",
        "        # Creates a legend with the list of patches above.\n",
        "        ax_gle_tq_clip.legend(handles=patch_list, fontsize=8, loc='lower left',\n",
        "                bbox_to_anchor = (1,0.75),title='Legenda', title_fontsize=10)\n",
        "\n",
        "\n",
        "        plt.grid(visible=True)\n",
        "        plt.xlabel('Longitude (°)')\n",
        "        plt.ylabel('Latitude (°)')\n",
        "        plt.show()\n",
        "\n",
        "        # Recalculando a área das glebas no interior dos pa em km2\n",
        "        gle_tq_clip['area_km2'] = (gle_tq_clip.to_crs(5880).area)/1000000\n",
        "\n",
        "        gle_tq_clip_area = gle_tq_clip['area_km2'].sum()\n",
        "        #percentual_floresta_B = round((floresta_B_uf_area/area_uf)*100,2)\n",
        "        gle_tq_clip_area = locale.currency(gle_tq_clip_area, grouping=True, symbol=None)\n",
        "\n",
        "\n",
        "        display(Markdown(f'### A área de Territórios Quilobola dentro das Glebas Federais no Estado do {uf_analise} é de: **{gle_tq_clip_area} km²**'))\n",
        "\n",
        "        display(Markdown(f'''Dos {tq_uf_area} km² de Territórios Quilobola, {gle_tq_clip_area} km² estão sobrepostas aos polígons de Glebas Públicas Federais registrados na base de dados do INCRA.'''))\n",
        "except:\n",
        "        display(Markdown(f'### Não há Territórios Quilobola demarcados no Estado do {uf_analise} dentro de Glebas Federais.'))"
      ],
      "id": "3c4e6335",
      "execution_count": null,
      "outputs": []
    },
    {
      "cell_type": "markdown",
      "metadata": {},
      "source": [
        "### Glebas Federais sobrepostas a Imóveis Certificados.\n",
        "\n",
        "#### Mapa Geral.\n"
      ],
      "id": "7160365e"
    },
    {
      "cell_type": "code",
      "metadata": {},
      "source": [
        "#| echo: false\n",
        "#| fig-align: center\n",
        "if sigef_uf.shape[0]>0:\n",
        "        fig_gle_sigef, ax_gle_sigef = plt.subplots()\n",
        "        uf_select.plot(ax=ax_gle_sigef, facecolor = 'none', edgecolor = 'black', linewidth = 0.7)\n",
        "        sigef_uf.plot(ax=ax_gle_sigef, facecolor = cor_SIGEF, edgecolor = 'none', alpha = 1, linewidth = 0.7)\n",
        "        gleba_uf_clip.plot(ax=ax_gle_sigef, facecolor = cor_gleba, edgecolor = 'black', alpha = 0.5, linewidth = 0.7)\n",
        "        # LEGENDAS\n",
        "        patch_list = []\n",
        "        patch_list.append(patches.Patch(facecolor=cor_SIGEF, alpha=0.6, edgecolor='none', label='Imóveis Certificados', linewidth=1))\n",
        "        patch_list.append(patches.Patch(facecolor=cor_gleba, edgecolor='blue', label='Gleba Federal', linewidth=1, alpha=0.5))\n",
        "        patch_list.append(patches.Patch(facecolor='none', label='Imóveis Certificados nas Glebas', linewidth=1))\n",
        "        # Creates a legend with the list of patches above.\n",
        "        ax_gle_tq.legend(handles=patch_list, fontsize=10, loc='lower left',\n",
        "                bbox_to_anchor = (1,0.75),title='Legenda', title_fontsize=12)\n",
        "\n",
        "        plt.grid(visible=True)\n",
        "        plt.xlabel('Longitude (°)')\n",
        "        plt.ylabel('Latitude (°)')\n",
        "        plt.show()\n",
        "else:\n",
        "        display(Markdown(f'### Não há Imóveis Certificados demarcados no Estado do {uf_analise} dentro de Glebas Federais.'))"
      ],
      "id": "e7e679b3",
      "execution_count": null,
      "outputs": []
    },
    {
      "cell_type": "markdown",
      "metadata": {},
      "source": [
        "#### Glebas Federais com Imóveis Certificados.\n"
      ],
      "id": "5885a66c"
    },
    {
      "cell_type": "code",
      "metadata": {},
      "source": [
        "#| echo: false\n",
        "#| fig-align: center\n",
        "if sigef_uf.shape[0]>0:\n",
        "        fig_gle_sigef_clip, ax_gle_sigef_clip = plt.subplots()\n",
        "        uf_select.plot(ax=ax_gle_sigef_clip, facecolor = 'none', edgecolor = 'black', linewidth = 0.7)\n",
        "        gle_sigef_clip = gleba_uf_clip.overlay(sigef_uf, how='intersection', keep_geom_type=False)\n",
        "        gleba_uf_clip.plot(ax=ax_gle_sigef_clip, facecolor = 'none', edgecolor = 'black', alpha = 0.5, linewidth = 0.7)\n",
        "        gle_sigef_clip.plot(ax=ax_gle_sigef_clip, facecolor = cor_gleba_tq, edgecolor = 'none', alpha = 1, linewidth = 0.7)\n",
        "        # LEGENDAS\n",
        "        patch_list = []\n",
        "        patch_list.append(patches.Patch(facecolor = 'none', edgecolor = 'black', linewidth = 0.7, label=f'{uf_analise}'))\n",
        "        patch_list.append(patches.Patch(facecolor='none', edgecolor='blue', linewidth = 0.7, label='Gleba Federal'))\n",
        "        patch_list.append(patches.Patch(facecolor = cor_gleba_sigef, edgecolor = 'none', alpha = 1, linewidth = 0.7, label='Imóveis Certificados nas Glebas'))\n",
        "        # Creates a legend with the list of patches above.\n",
        "        ax_gle_sigef_clip.legend(handles=patch_list, fontsize=8, loc='lower left',\n",
        "                bbox_to_anchor = (1,0.75),title='Legenda', title_fontsize=10)\n",
        "        plt.grid(visible=True)\n",
        "        plt.xlabel('Longitude (°)')\n",
        "        plt.ylabel('Latitude (°)')\n",
        "        plt.show()\n",
        "\n",
        "\n",
        "\n",
        "        # Recalculando a área das glebas no interior dos pa em km2\n",
        "        gle_sigef_clip['area_km2'] = (gle_sigef_clip.to_crs(5880).area)/1000000\n",
        "\n",
        "        gle_sigef_clip_area = gle_sigef_clip['area_km2'].sum()\n",
        "        #percentual_floresta_B = round((floresta_B_uf_area/area_uf)*100,2)\n",
        "        gle_sigef_clip_area = locale.currency(gle_sigef_clip_area, grouping=True, symbol=None)\n",
        "\n",
        "\n",
        "        display(Markdown(f'### A área de Imóveis Certificados dentro das Glebas Federais no Estado do {uf_analise} é de: **{gle_sigef_clip_area} km²**'))\n",
        "\n",
        "        display(Markdown(f'''Dos {sigef_uf_area} km² de Imóveis Certificados, {gle_sigef_clip_area} km² estão sobrepostas aos polígons de Glebas Públicas Federais registrados na base de dados do INCRA.'''))\n",
        "else:\n",
        "        display(Markdown(f'### Não há Imóveis Certificados demarcados no Estado do {uf_analise} dentro de Glebas Federais.'))"
      ],
      "id": "70ceafe8",
      "execution_count": null,
      "outputs": []
    },
    {
      "cell_type": "markdown",
      "metadata": {},
      "source": [
        "</div>"
      ],
      "id": "99426bdf"
    }
  ],
  "metadata": {
    "kernelspec": {
      "name": "python3",
      "language": "python",
      "display_name": "Python 3 (ipykernel)",
      "path": "/home/isr/miniconda3/share/jupyter/kernels/python3"
    }
  },
  "nbformat": 4,
  "nbformat_minor": 5
}
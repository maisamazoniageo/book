{
  "cells": [
    {
      "cell_type": "markdown",
      "metadata": {},
      "source": [
        "# Análise de Sobreposição individual - Amazonas (Parte 01).\n"
      ],
      "id": "4a9bf0d7"
    },
    {
      "cell_type": "code",
      "metadata": {},
      "source": [
        "#| echo: false\n",
        "import geopandas as gpd\n",
        "import pandas as pd\n",
        "import locale\n",
        "import numpy as np\n",
        "import os\n",
        "import matplotlib.pyplot as plt\n",
        "import matplotlib.patches as patches\n",
        "from IPython.display import display, Markdown\n",
        "pd.options.display.float_format = '{:.4f}'.format\n",
        "pd.set_option('display.precision', 4)\n",
        "locale.setlocale(locale.LC_ALL, 'pt_BR.UTF-8')\n",
        "import warnings\n",
        "warnings.filterwarnings('ignore')\n",
        "glebas = gpd.read_file('../glebas-federais.gpkg', layer='glebas-mais-amazonia')\n",
        "glebas = glebas.set_index('gid')\n",
        "\n",
        "uf_analise = 'Amazonas'\n",
        "\n",
        "# Definição de cores\n",
        "cor_gleba = '#e9cf68'\n",
        "cor_SIGEF = '#e0bd1f'\n",
        "cor_PA = '#998115'\n",
        "cor_TI = '#f2d4d3'\n",
        "cor_TQ = '#d7c0dd'\n",
        "cor_UC = '#99eb65'\n",
        "cor_Floresta = '#a7f5e0'\n",
        "cor_massa_agua = '#0751ff'\n",
        "cor_rodovias = '#e10c00'\n",
        "cor_gleba_flo = '#D9E3A9'\n",
        "cor_gleba_uc = '#C1DC66'\n",
        "cor_gleba_ti = '#EFD9A5'\n",
        "cor_gleba_pa = '#C1A83E'\n",
        "cor_gleba_tq = '#CDAFD4'\n",
        "cor_gleba_sigef = '#E4C643'"
      ],
      "id": "58922d61",
      "execution_count": null,
      "outputs": []
    },
    {
      "cell_type": "code",
      "metadata": {},
      "source": [
        "#| echo: false\n",
        "\n",
        "glebas = glebas[glebas['uf_nome']==uf_analise].sort_values('nome_gleba')\n",
        "glebas = glebas.iloc[:40]\n",
        "\n",
        "for row in glebas.itertuples():\n",
        "    indice = int(row.Index)\n",
        "    gleba = glebas.loc[[indice]]\n",
        "    nome_da_gleba = gleba[\"nome_gleba\"].values[0]\n",
        "    display(Markdown(f'## Gleba Analisada: {nome_da_gleba}'))\n",
        "    gleba = gleba.rename(columns={'nome_gleba':'Nome da Gleba',\n",
        "    'area_ha':'Área (ha)'})\n",
        "    display(gleba[['Nome da Gleba','Área (ha)']].to_html(index=False))\n",
        "    display(Markdown('### Abrangência Municipal'))\n",
        "    fig, ax = plt.subplots(figsize=(13,6))\n",
        "\n",
        "    municipio_gleba = gpd.read_file('../municipios-glebas.gpkg', \n",
        "                                    layer=f'{indice}')\n",
        "    municipio_gleba.plot(ax=ax, column='Nome do Município', categorical=True,\n",
        "                         legend=True,\n",
        "                         alpha=0.65, cmap='Pastel2',\n",
        "                         legend_kwds={'loc': 'upper center',\n",
        "                         'bbox_to_anchor':(0.5,-0.2),'ncols':3})\n",
        "    gleba.plot(ax=ax, facecolor='none', edgecolor='black', linewidth=2)\n",
        "    plt.xlabel('Longitude (°)')\n",
        "    plt.ylabel('Latitude (°)')\n",
        "    plt.xticks(rotation=45)\n",
        "    plt.grid()\n",
        "    plt.show()\n",
        "    display(municipio_gleba[['Código da UF', 'Estado', 'UF', \n",
        "    'Código do Município', 'Nome do Município']].to_html(index=False))\n",
        "\n",
        "    display(Markdown('### Unidades de Conservação'))\n",
        "\n",
        "    try:\n",
        "        uc_gleba = gpd.read_file('../uc-glebas.gpkg', \n",
        "                                        layer=f'{indice}')\n",
        "        fig_uc, ax_uc = plt.subplots(figsize=(13,6))\n",
        "        uc_gleba.plot(ax=ax_uc, column='Nome', categorical=True,\n",
        "                        legend=True,\n",
        "                        alpha=0.65, cmap='Pastel2',\n",
        "                        legend_kwds={'loc': 'upper center',\n",
        "                        'bbox_to_anchor':(0.5,-0.2),'ncols':3})\n",
        "        gleba.plot(ax=ax_uc, facecolor='none', edgecolor='black', linewidth=2)\n",
        "        plt.xlabel('Longitude (°)')\n",
        "        plt.ylabel('Latitude (°)')\n",
        "        plt.xticks(rotation=45)\n",
        "        plt.grid()\n",
        "        plt.show()\n",
        "\n",
        "        display(uc_gleba[['Nome','Categoria','Responsabilidade',\n",
        "        'Área Sobreposta (ha)']].to_html(index=False))\n",
        "\n",
        "    except:\n",
        "\n",
        "        display(Markdown('Não há sobreposição'))\n",
        "\n",
        "    display(Markdown('### Terras Indígenas'))\n",
        "\n",
        "    try:\n",
        "        ti_gleba = gpd.read_file('../ti-glebas.gpkg', \n",
        "                                layer=f'{indice}')\n",
        "        fig_ti, ax_ti = plt.subplots(figsize=(13,6))\n",
        "        ti_gleba.plot(ax=ax_ti, column='terrai_nom', categorical=True,\n",
        "                        legend=True,\n",
        "                        alpha=0.65, cmap='Pastel2',\n",
        "                        legend_kwds={'loc': 'upper center',\n",
        "                        'bbox_to_anchor':(0.5,-0.2),'ncols':3})\n",
        "        gleba.plot(ax=ax_ti, facecolor='none', edgecolor='black', linewidth=2)\n",
        "        plt.xlabel('Longitude (°)')\n",
        "        plt.ylabel('Latitude (°)')\n",
        "        plt.xticks(rotation=45)\n",
        "        plt.grid()\n",
        "        plt.show()\n",
        "\n",
        "        display(ti_gleba[['Nome', 'Fase de Regularização',\n",
        "                        'Área Sobreposta (ha)']].to_html(index=False))\n",
        "\n",
        "    except:\n",
        "\n",
        "        display(Markdown('Não há sobreposição'))\n",
        "\n",
        "    display(Markdown('### Projetos de Assentamento'))\n",
        "\n",
        "    try:\n",
        "        pa_gleba = gpd.read_file('../pa-glebas.gpkg', \n",
        "                            layer=f'{indice}')\n",
        "        fig_pa, ax_pa = plt.subplots(figsize=(13,6))\n",
        "        pa_gleba.plot(ax=ax_pa, column='Nome', categorical=True,\n",
        "                        legend=True,\n",
        "                        alpha=0.65, cmap='Pastel2',\n",
        "                        legend_kwds={'loc': 'upper center',\n",
        "                        'bbox_to_anchor':(0.5,-0.2),'ncols':3})\n",
        "        gleba.plot(ax=ax_pa, facecolor='none', edgecolor='black', linewidth=2)\n",
        "        plt.xlabel('Longitude (°)')\n",
        "        plt.ylabel('Latitude (°)')\n",
        "        plt.xticks(rotation=45)\n",
        "        plt.grid()\n",
        "        plt.show()\n",
        "        display(pa_gleba[['SIPRA','Nome','Município',\n",
        "                'Área Sobreposta (ha)']].to_html(index=False))\n",
        "\n",
        "    except:\n",
        "\n",
        "        display(Markdown('Não há sobreposição'))\n",
        "\n",
        "    display(Markdown('### Território Quilombola'))\n",
        "\n",
        "    try:\n",
        "        tq_gleba = gpd.read_file('../tq-glebas.gpkg', \n",
        "                        layer=f'{indice}')\n",
        "        fig_tq, ax_tq = plt.subplots(figsize=(13,6))\n",
        "        tq_gleba.plot(ax=ax_tq, column='nm_comunid', categorical=True,\n",
        "                        legend=True, alpha=0.65, cmap='Pastel2',\n",
        "                        legend_kwds={'loc': 'upper center',\n",
        "                        'bbox_to_anchor':(0.5,-0.2),'ncols':3})\n",
        "        gleba.plot(ax=ax_tq, facecolor='none', edgecolor='black', linewidth=2)\n",
        "        plt.xlabel('Longitude (°)')\n",
        "        plt.ylabel('Latitude (°)')\n",
        "        plt.xticks(rotation=45)\n",
        "        plt.grid()\n",
        "        plt.show()\n",
        "        display(tq_gleba[['Nome', 'Responsabilidade', 'Fase da Regularização',\n",
        "                    'Área Sobreposta (ha)']].to_html(index=False))\n",
        "\n",
        "    except:\n",
        "\n",
        "        display(Markdown('Não há sobreposição'))\n",
        "\n",
        "    display(Markdown('### SIGEF'))\n",
        "\n",
        "    try:\n",
        "        sigef_gleba = gpd.read_file('../sigef-glebas.gpkg', \n",
        "                        layer=f'{indice}')\n",
        "        fig_sigef, ax_sigef = plt.subplots(figsize=(13,6))\n",
        "        sigef_gleba.plot(ax=ax_sigef, facecolor=cor_SIGEF, edgecolor='blue', linewidth=0.5)\n",
        "        gleba.plot(ax=ax_sigef, facecolor='none', edgecolor='black',\n",
        "                    linewidth=1)\n",
        "        # LEGENDAS\n",
        "        patch_list = []\n",
        "        patch_list.append(patches.Patch(facecolor='none', edgecolor='black',\n",
        "                        label='Gleba Federal', linewidth=1))\n",
        "        patch_list.append(patches.Patch(facecolor=cor_SIGEF, alpha=0.6, \n",
        "                            edgecolor='none', label='SIGEF', linewidth=1))\n",
        "        # Creates a legend with the list of patches above.\n",
        "        ax_sigef.legend(handles=patch_list, fontsize=10, loc='upper center',\n",
        "                bbox_to_anchor = (0.5 , -0.2), ncols=3,title='Legenda', title_fontsize=12)\n",
        "        plt.xlabel('Longitude (°)')\n",
        "        plt.ylabel('Latitude (°)')\n",
        "        plt.xticks(rotation=45)\n",
        "        plt.grid()\n",
        "        plt.show()\n",
        "\n",
        "        display(sigef_gleba[['Código SIGEF','Natureza do Polígono', 'Área Sobreposta (ha)']].sort_values('Natureza do Polígono').to_html(index=False))\n",
        "\n",
        "    except:\n",
        "\n",
        "        display(Markdown('Não há sobreposição'))\n",
        "    \n",
        "    display(Markdown('### SNCI'))\n",
        "\n",
        "    try:\n",
        "        snci_gleba = gpd.read_file('../snci-glebas.gpkg', layer=f'{indice}')\n",
        "        fig_snci, ax_snci = plt.subplots(figsize=(13,6))\n",
        "        snci_gleba.plot(ax=ax_snci, facecolor=cor_SIGEF, edgecolor='blue', linewidth=0.5)\n",
        "        gleba.plot(ax=ax_snci, facecolor='none', edgecolor='black',\n",
        "                    linewidth=1)\n",
        "        # LEGENDAS\n",
        "        patch_list = []\n",
        "        patch_list.append(patches.Patch(facecolor='none', edgecolor='black',\n",
        "                        label='Gleba Federal', linewidth=1))\n",
        "        patch_list.append(patches.Patch(facecolor=cor_SIGEF, alpha=0.6, \n",
        "                            edgecolor='none', label='SNCI', linewidth=1))\n",
        "        # Creates a legend with the list of patches above.\n",
        "        ax_sigef.legend(handles=patch_list, fontsize=10, loc='upper center',\n",
        "                bbox_to_anchor = (0.5 , -0.2), ncols=3,title='Legenda', title_fontsize=12)\n",
        "        plt.xlabel('Longitude (°)')\n",
        "        plt.ylabel('Latitude (°)')\n",
        "        plt.xticks(rotation=45)\n",
        "        plt.grid()\n",
        "        plt.show()\n",
        "        snci_gleba = snci_gleba.rename(columns={\n",
        "            'num_certif':'Código SNCI'\n",
        "        })\n",
        "        display(snci_gleba[['Código SNCI', 'Área Sobreposta (ha)']].to_html(index=False))\n",
        "\n",
        "    except:\n",
        "\n",
        "        display(Markdown('Não há sobreposição'))"
      ],
      "id": "136ed0d1",
      "execution_count": null,
      "outputs": []
    }
  ],
  "metadata": {
    "kernelspec": {
      "name": "python3",
      "language": "python",
      "display_name": "Python 3 (ipykernel)",
      "path": "/home/isr/miniconda3/share/jupyter/kernels/python3"
    }
  },
  "nbformat": 4,
  "nbformat_minor": 5
}